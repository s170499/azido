{"version":3,"file":"static/js/790.0a4bee09.chunk.js","mappings":"gLA8EA,QA1EA,WACE,OACEA,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,SACXC,EAAG,EACHC,GAAI,CACFC,gBAAiB,OAAOC,KACxBC,eAAgB,QAChBC,mBAAoB,SACpBC,iBAAkB,YAClBC,QAAS,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,SAEvCC,SAAU,UACVC,UAEFC,EAAAA,EAAAA,MAAClB,EAAAA,EAAG,CAACM,GAAI,CAACa,gBAAgB,UAAWC,aAAc,MAAOR,QAAS,OAAQS,cAAe,QAAQJ,SAAA,EAElGlB,EAAAA,EAAAA,KAAA,KACEuB,KAAK,2DACLC,OAAO,SACPC,IAAI,sBACJC,MAAO,CAAEC,eAAgB,QAAST,UAElClB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CACTC,QAAQ,KACRtB,GAAI,CACFuB,UAAW,SACXC,aAAc,OACdC,MAAO,UACPC,WAAY,MAEZC,WAAY,oBACZC,SAAU,CAAErB,GAAI,OAAQC,GAAI,OAAQC,GAAI,SACxCE,SACH,4BAMHlB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFM,GAAI,CACF6B,SAAU,WACVC,MAAO,OACPC,SAAU,CAAExB,GAAI,QAASC,GAAI,QAASC,GAAI,SAC1CM,cAAe,SACfiB,OAAQ,CAAEzB,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCC,SAAU,UAEVC,UAEFlB,EAAAA,EAAAA,KAAA,UACEwC,IAAI,iEACJC,MAAM,mBACNf,MAAO,CACLU,SAAU,WACVM,IAAK,EACLC,KAAM,EACNN,MAAO,OACPE,OAAQ,OACRK,OAAQ,QAGVC,MAAM,qFAMhB,C,6IC3EA,MACA,GADmBC,E,QAAAA,GAAuB,SAAU,CAAC,SCO/CC,GAAeC,EAAAA,EAAAA,KACf/C,ECDS,WAAiC,IAAdgD,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,MAAM,QACJG,EAAO,aACPN,EAAY,iBACZO,EAAmB,cAAa,kBAChCC,GACEN,EACEO,GAAUC,EAAAA,EAAAA,IAAO,MAAO,CAC5BC,kBAAmBC,GAAiB,UAATA,GAA6B,OAATA,GAA0B,OAATA,GADlDF,CAEbG,EAAAA,GAgBH,OAfyBC,EAAAA,YAAiB,SAAaC,EAASC,GAC9D,MAAMC,GAAQC,EAAAA,EAAAA,GAASlB,IACjB,UACJmB,EAAS,UACTC,EAAY,SACTC,IACDC,EAAAA,EAAAA,GAAaP,GACjB,OAAoB9D,EAAAA,EAAAA,KAAKwD,EAAS,CAChCc,GAAIH,EACJJ,IAAKA,EACLG,WAAWK,EAAAA,EAAAA,GAAKL,EAAWX,EAAoBA,EAAkBD,GAAoBA,GACrFU,MAAOX,GAAUW,EAAMX,IAAoBW,KACxCI,GAEP,GAEF,CDzBYI,CAAU,CACpBnB,QAASoB,EAAAA,EACT1B,eACAO,iBAAkBoB,EAAWC,KAC7BpB,kBAAmBqB,EAAAA,EAAmBC,WAqBxC,G,oJEhCO,SAASC,EAA0BC,GACxC,OAAOC,EAAAA,EAAAA,IAAqB,gBAAiBD,EAC/C,EAC0BjC,EAAAA,EAAAA,GAAuB,gBAAiB,CAAC,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,YAAa,YAAa,QAAS,QAAS,UAAW,SAAU,UAAW,WAAY,YAAa,aAAc,cAAe,eAAgB,SAAU,eAAgB,c,aCQ3R,MAAMmC,EAAW,CACfC,SAAS,EACTC,WAAW,EACXC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,eAAe,EACfC,cAAc,GAEVrB,GAAesB,EAAAA,EAAAA,MAeRC,GAAiBnC,EAAAA,EAAAA,IAAO,OAAQ,CAC3CoC,KAAM,gBACNd,KAAM,OACNe,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOrB,KAAMsB,EAAWpE,SAAWmE,EAAOC,EAAWpE,SAA+B,YAArBoE,EAAWC,OAAuBF,EAAO,SAAQG,EAAAA,EAAAA,GAAWF,EAAWC,UAAWD,EAAWG,QAAUJ,EAAOI,OAAQH,EAAWI,cAAgBL,EAAOK,aAAcJ,EAAWK,WAAaN,EAAOM,UAAU,GAP5P7C,EAS3B8C,EAAAA,EAAAA,IAAUC,IAAA,IAAC,MACZxC,GACDwC,EAAA,MAAM,CACLC,OAAQ,EACRC,SAAU,CAAC,CACTX,MAAO,CACLlE,QAAS,WAEXH,MAAO,CAELiF,KAAM,UACNC,WAAY,UACZC,cAAe,eAEbC,OAAOC,QAAQ/C,EAAMgD,YAAYC,QAAOC,IAAA,IAAErF,EAASsF,GAAMD,EAAA,MAAiB,YAAZrF,GAAyBsF,GAA0B,kBAAVA,CAAkB,IAAEC,KAAIC,IAAA,IAAExF,EAASsF,GAAME,EAAA,MAAM,CAC1JtB,MAAO,CACLlE,WAEFH,MAAOyF,EACR,OAAOL,OAAOC,QAAQ/C,EAAMsD,SAASL,QAAOM,EAAAA,EAAAA,MAAkCH,KAAII,IAAA,IAAExF,GAAMwF,EAAA,MAAM,CAC/FzB,MAAO,CACL/D,SAEFN,MAAO,CACLM,OAAQgC,EAAMyD,MAAQzD,GAAOsD,QAAQtF,GAAO0F,MAE/C,OAAOZ,OAAOC,QAAQ/C,EAAMsD,SAASK,MAAQ,CAAC,GAAGV,QAAOW,IAAA,IAAE,CAAET,GAAMS,EAAA,MAAsB,kBAAVT,CAAkB,IAAEC,KAAIS,IAAA,IAAE7F,GAAM6F,EAAA,MAAM,CACnH9B,MAAO,CACL/D,MAAO,QAAOmE,EAAAA,EAAAA,GAAWnE,MAE3BN,MAAO,CACLM,OAAQgC,EAAMyD,MAAQzD,GAAOsD,QAAQK,KAAK3F,IAE7C,IAAI,CACH+D,MAAO+B,IAAA,IAAC,WACN7B,GACD6B,EAAA,MAA0B,YAArB7B,EAAWC,KAAmB,EACpCxE,MAAO,CACLI,UAAW,gCAEZ,CACDiE,MAAOgC,IAAA,IAAC,WACN9B,GACD8B,EAAA,OAAK9B,EAAWG,MAAM,EACvB1E,MAAO,CACLT,SAAU,SACV+G,aAAc,WACdC,WAAY,WAEb,CACDlC,MAAOmC,IAAA,IAAC,WACNjC,GACDiC,EAAA,OAAKjC,EAAWI,YAAY,EAC7B3E,MAAO,CACLK,aAAc,WAEf,CACDgE,MAAOoC,IAAA,IAAC,WACNlC,GACDkC,EAAA,OAAKlC,EAAWK,SAAS,EAC1B5E,MAAO,CACLK,aAAc,MAGnB,KACKqG,EAAwB,CAC5BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,IACPC,QAAS,KA+IX,EA7IgClF,EAAAA,YAAiB,SAAoBC,EAASC,GAC5E,MAAM,MACJ/B,KACGgH,IACDC,EAAAA,EAAAA,GAAgB,CAClBlD,MAAOjC,EACP+B,KAAM,kBAIFE,EAAQ1B,EAAa,IACtB2E,MAHc/D,EAASjD,IAIT,CACfA,YAGE,MACJkE,EAAQ,UAAS,UACjBhC,EAAS,UACTC,EAAS,aACTkC,GAAe,EAAK,OACpBD,GAAS,EAAK,UACdE,GAAY,EAAK,QACjBzE,EAAU,QAAO,eACjBqH,EAAiBd,KACdhE,GACD2B,EACEE,EAAa,IACdF,EACHG,QACAlE,QACAkC,YACAC,YACAkC,eACAD,SACAE,YACAzE,UACAqH,kBAEIC,EAAYhF,IAAcmC,EAAY,IAAM4C,EAAerH,IAAYuG,EAAsBvG,KAAa,OAC1GuH,EA7IkBnD,KACxB,MAAM,MACJC,EAAK,aACLG,EAAY,OACZD,EAAM,UACNE,EAAS,QACTzE,EAAO,QACPuH,GACEnD,EACEoD,EAAQ,CACZ1E,KAAM,CAAC,OAAQ9C,EAA8B,YAArBoE,EAAWC,OAAuB,SAAQC,EAAAA,EAAAA,GAAWD,KAAUG,GAAgB,eAAgBD,GAAU,SAAUE,GAAa,cAE1J,OAAOgD,EAAAA,EAAAA,GAAeD,EAAOvE,EAA2BsE,EAAQ,EAiIhDG,CAAkBtD,GAClC,OAAoBjG,EAAAA,EAAAA,KAAK4F,EAAgB,CACvCtB,GAAI6E,EACJpF,IAAKA,EACLG,WAAWK,EAAAA,EAAAA,GAAK6E,EAAQzE,KAAMT,MAC3BE,EACH6B,WAAYA,EACZvE,MAAO,IACS,YAAVwE,GAAuB,CACzB,yBAA0BA,MAEzB9B,EAAM1C,QAGf,G,qFC3Ke,SAAS8H,EAAazD,GACnC,MAAM,OACJC,EAAM,aACNjD,EAAe,CAAC,GACdgD,EACE0D,EAAiC,oBAAXzD,EAAwB0D,IAAc1D,cAPnD5C,KADAuG,EAQkED,IAP7C,OAARC,GAA4C,IAA5B7C,OAAO8C,KAAKD,GAAKxG,OAOkCJ,EAAe2G,GARhH,IAAiBC,CAQ2G,EAAE3D,EAC5H,OAAoBhG,EAAAA,EAAAA,KAAK6J,EAAAA,GAAQ,CAC/B7D,OAAQyD,GAEZ,C,cCkBA,QA7BA,SAAqBjD,GAIlB,IAJmB,OACpBR,EAAM,QACN3C,EAAO,aACPN,EAAe,CAAC,GACjByD,EACC,MAAMsD,GAAa7F,EAAAA,EAAAA,GAASlB,GACtB0G,EAAiC,oBAAXzD,EAAwBA,EAAO3C,GAAUyG,EAAWzG,IAAyByG,GAAc9D,EACvH,OAAoBhG,EAAAA,EAAAA,KAAK+J,EAAiB,CACxC/D,OAAQyD,GAEZ,E,wBCQA,QAjBA,SAAsB1D,GACpB,OAAoB/F,EAAAA,EAAAA,KAAKgK,EAAoB,IACxCjE,EACHhD,aAAcA,EAAAA,EACdM,QAASoB,EAAAA,GAEb,ECPO,SAASwF,EAAUjE,GACxB,OAAO,SAA6BD,GAClC,OAGE/F,EAAAA,EAAAA,KAAKwJ,EAAc,CACjBxD,OAA0B,oBAAXA,EAAwBhC,GAASgC,EAAO,CACrDhC,WACG+B,IACAC,GAGX,CACF,CAGO,SAASL,IACd,OAAOtB,EAAAA,CACT,C","sources":["components/SpotifyEmbed.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/createBox/createBox.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/zero-styled/index.js"],"sourcesContent":["import React from 'react'; \r\nimport { Box, Typography } from '@mui/material';\r\nimport cool from '../media/cool.jpg';\r\n\r\nfunction SpotifyEmbed() {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      p={2}\r\n      sx={{\r\n        backgroundImage: `url(${cool})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        padding: { xs: '30px', sm: '80px', md: '120px' }, // Adjusted padding for smaller screens\r\n     \r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <Box sx={{backgroundColor:'#2D383A', borderRadius: '8px', padding: '30px', paddingBottom: '50px'}}>\r\n      {/* Clickable Title */}\r\n      <a\r\n        href=\"https://open.spotify.com/playlist/37i9dQZF1E4v2mgY7R8f8Z\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ textDecoration: 'none' }}\r\n      >\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{\r\n            textAlign: 'center',\r\n            marginBottom: '20px', // Adjusted for smaller screens\r\n            color: '#B768A2',\r\n            fontWeight: '900',\r\n          \r\n            fontFamily: \"'Orbitron', serif\",\r\n            fontSize: { xs: '30px', sm: '50px', md: '70px' }, // Responsive font size\r\n          }}\r\n        >\r\n          Follow me on Spotify\r\n        </Typography>\r\n      </a>\r\n\r\n      {/* Responsive Spotify Embed */}\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          width: '100%',\r\n          maxWidth: { xs: '400px', sm: '600px', md: '800px' }, // Max width for the embed\r\n          paddingBottom: '56.25%', // 16:9 aspect ratio for iframe\r\n          height: { xs: '300px', sm: '400px', md: '200px' },\r\n          overflow: 'hidden',\r\n         \r\n        }}\r\n      >\r\n        <iframe\r\n          src=\"https://open.spotify.com/embed/playlist/37i9dQZF1E4v2mgY7R8f8Z\"\r\n          title=\"Spotify Playlist\"\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            border: 'none',\r\n        \r\n          }}\r\n          allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\r\n        ></iframe>\r\n      </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SpotifyEmbed;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from \"../styles/defaultTheme.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, {\n    ...props,\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };"],"names":["_jsx","Box","display","flexDirection","justifyContent","alignItems","p","sx","backgroundImage","cool","backgroundSize","backgroundPosition","backgroundRepeat","padding","xs","sm","md","overflow","children","_jsxs","backgroundColor","borderRadius","paddingBottom","href","target","rel","style","textDecoration","Typography","variant","textAlign","marginBottom","color","fontWeight","fontFamily","fontSize","position","width","maxWidth","height","src","title","top","left","border","allow","generateUtilityClasses","defaultTheme","createTheme","options","arguments","length","undefined","themeId","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","className","component","other","extendSxProp","as","clsx","createBox","THEME_ID","boxClasses","root","ClassNameGenerator","generate","getTypographyUtilityClass","slot","generateUtilityClass","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","internal_createExtendSxProp","TypographyRoot","name","overridesResolver","props","styles","ownerState","align","capitalize","noWrap","gutterBottom","paragraph","memoTheme","_ref","margin","variants","font","lineHeight","letterSpacing","Object","entries","typography","filter","_ref2","value","map","_ref3","palette","createSimplePaletteValueFilter","_ref4","vars","main","text","_ref5","_ref6","_ref7","_ref8","textOverflow","whiteSpace","_ref9","_ref10","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","themeProps","useDefaultProps","variantMapping","Component","classes","slots","composeClasses","useUtilityClasses","GlobalStyles","globalStyles","themeInput","obj","keys","Global","upperTheme","MuiGlobalStyles","SystemGlobalStyles","globalCss"],"sourceRoot":""}